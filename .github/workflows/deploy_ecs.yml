name: 'Push to ECR'

on:
  workflow_call:
    inputs:
      build-files:
        required: false 
        default: "build-files"
        type: string
      aws-region:
        required: true
        type: string
      ecs-task-definition:
        required: true
        type: string
      container-name:
        required: true
        type: string
      ecr-repository:
        required: true
        type: string
      ecs-service:
        required: true
        type: string
      ecs-cluster:
        required: true
        type: string

jobs:
  deploy_ecs:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Output
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.build-files}}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws-region }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ inputs.ecs-task-definition }}
          container-name: ${{ inputs.container-name }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repository }}:${{ github.run_number }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ inputs.ecs-service }}
          cluster: $${{ inputs.ecs-cluster }}
          wait-for-service-stability: true
